/* src/index.css */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* 
  Any of your custom global styles or default styles (like :root, body, a, h1, button) 
  should come AFTER the @tailwind directives if you want them to potentially 
  override Tailwind's base styles or if you want to use Tailwind utility classes
  within these global styles (though that's less common for global selectors).
  
  Alternatively, if these are truly meant to be defaults that Tailwind builds upon,
  they could be before, but it's more common to have custom overrides after.
  For now, let's keep them after.
*/

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  /* color-scheme and default colors will be affected by Tailwind's preflight/base styles
     and your Flowbite theme. You might adjust these after seeing how Flowbite styles them. */
  color-scheme: light dark; 
  /* color: rgba(255, 255, 255, 0.87); /* Likely overridden by Tailwind/Flowbite */
  /* background-color: #242424;       /* Likely overridden by Tailwind/Flowbite */

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0; /* Tailwind's preflight usually handles this */
  /* display: flex; /* Consider if you want this on body globally */
  /* place-items: center; /* Consider if you want this on body globally */
  /* min-width: 320px; */
  /* min-height: 100vh; */
  /* It's often better to apply layout styles to specific page wrappers
     rather than globally on the body, unless it's truly universal. */
}

a {
  font-weight: 500;
  /* color: #646cff; /* Let Flowbite/Tailwind handle link colors or customize via theme */
  text-decoration: inherit; /* Tailwind might provide its own link styling */
}
a:hover {
  /* color: #535bf2; */
}

h1 {
  /* font-size: 3.2em; /* Manage heading sizes with Tailwind classes (e.g., text-3xl, text-4xl) */
  /* line-height: 1.1; */
}

button {
  /* These styles will compete with Flowbite's button component styles.
     It's generally better to rely on Flowbite's button styling and customize
     it via props or Tailwind's theme if necessary, rather than global button styles. */
  /*
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
  */
}
/*
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}
*/

/* Dark mode preferences are usually handled by Tailwind's dark mode variant (dark:)
   and Flowbite's theming, configured in tailwind.config.cjs if needed. */
/*
@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}
*/